===-------------------------------------------------------------------------===
                          Clang front-end time report
===-------------------------------------------------------------------------===
  Total Execution Time: 67.4343 seconds (67.5841 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
  64.0864 (100.0%)   3.3480 (100.0%)  67.4343 (100.0%)  67.5841 (100.0%)  Clang front-end timer
  64.0864 (100.0%)   3.3480 (100.0%)  67.4343 (100.0%)  67.5841 (100.0%)  Total

===-------------------------------------------------------------------------===
                         Miscellaneous Ungrouped Timers
===-------------------------------------------------------------------------===

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
  27.1350 ( 44.7%)   1.9219 ( 59.5%)  29.0569 ( 45.4%)  29.1050 ( 45.4%)  Code Generation Time
  25.8722 ( 42.6%)   1.0093 ( 31.2%)  26.8816 ( 42.0%)  26.9391 ( 42.0%)  Template Instantiation Time
   7.7288 ( 12.7%)   0.2621 (  8.1%)   7.9908 ( 12.5%)   8.0094 ( 12.5%)  LLVM IR Generation Time
   0.0205 (  0.0%)   0.0370 (  1.1%)   0.0575 (  0.1%)   0.0591 (  0.1%)  Preprocessing
  60.7565 (100.0%)   3.2303 (100.0%)  63.9868 (100.0%)  64.1127 (100.0%)  Total

===-------------------------------------------------------------------------===
                      Instruction Selection and Scheduling
===-------------------------------------------------------------------------===
  Total Execution Time: 2.6169 seconds (2.6177 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   1.0030 ( 39.4%)   0.0146 ( 20.9%)   1.0176 ( 38.9%)   1.0198 ( 39.0%)  DAG Combining 1
   0.4693 ( 18.4%)   0.0069 (  9.8%)   0.4761 ( 18.2%)   0.4758 ( 18.2%)  Instruction Selection
   0.3707 ( 14.6%)   0.0065 (  9.3%)   0.3773 ( 14.4%)   0.3770 ( 14.4%)  DAG Combining 2
   0.3163 ( 12.4%)   0.0093 ( 13.2%)   0.3256 ( 12.4%)   0.3253 ( 12.4%)  Instruction Scheduling
   0.1781 (  7.0%)   0.0078 ( 11.1%)   0.1858 (  7.1%)   0.1856 (  7.1%)  Instruction Creation
   0.0929 (  3.6%)   0.0062 (  8.8%)   0.0990 (  3.8%)   0.0989 (  3.8%)  DAG Legalization
   0.0578 (  2.3%)   0.0062 (  8.9%)   0.0640 (  2.4%)   0.0639 (  2.4%)  Type Legalization
   0.0458 (  1.8%)   0.0064 (  9.2%)   0.0523 (  2.0%)   0.0523 (  2.0%)  Instruction Scheduling Cleanup
   0.0124 (  0.5%)   0.0062 (  8.9%)   0.0186 (  0.7%)   0.0185 (  0.7%)  Vector Legalization
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  DAG Combining after legalize types
   2.5468 (100.0%)   0.0701 (100.0%)   2.6169 (100.0%)   2.6177 (100.0%)  Total

===-------------------------------------------------------------------------===
                                 DWARF Emission
===-------------------------------------------------------------------------===
  Total Execution Time: 0.1263 seconds (0.1279 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0660 ( 78.0%)   0.0209 ( 50.0%)   0.0869 ( 68.8%)   0.0870 ( 68.0%)  DWARF Exception Writer
   0.0185 ( 21.9%)   0.0209 ( 50.0%)   0.0394 ( 31.2%)   0.0409 ( 31.9%)  Debug Info Emission
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  DWARF Debug Writer
   0.0845 (100.0%)   0.0418 (100.0%)   0.1263 (100.0%)   0.1279 (100.0%)  Total

===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 22.8964 seconds (22.9195 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   6.8322 ( 31.6%)   0.2313 ( 18.5%)   7.0634 ( 30.8%)   7.0656 ( 30.8%)  X86 DAG->DAG Instruction Selection
   6.3227 ( 29.2%)   0.3357 ( 26.8%)   6.6584 ( 29.1%)   6.6662 ( 29.1%)  Inliner for always_inline functions
   2.5811 ( 11.9%)   0.0169 (  1.3%)   2.5979 ( 11.3%)   2.6086 ( 11.4%)  Insert stack protectors
   1.6333 (  7.5%)   0.1333 ( 10.7%)   1.7666 (  7.7%)   1.7676 (  7.7%)  X86 Assembly Printer
   0.9977 (  4.6%)   0.0131 (  1.1%)   1.0108 (  4.4%)   1.0103 (  4.4%)  Prologue/Epilogue Insertion & Frame Finalization
   0.7515 (  3.5%)   0.0206 (  1.6%)   0.7720 (  3.4%)   0.7722 (  3.4%)  Fast Register Allocator
   0.3933 (  1.8%)   0.0164 (  1.3%)   0.4097 (  1.8%)   0.4099 (  1.8%)  Two-Address instruction pass
   0.2471 (  1.1%)   0.0138 (  1.1%)   0.2609 (  1.1%)   0.2611 (  1.1%)  Dominator Tree Construction
   0.2183 (  1.0%)   0.0185 (  1.5%)   0.2368 (  1.0%)   0.2364 (  1.0%)  MachineDominator Tree Construction
   0.2232 (  1.0%)   0.0131 (  1.0%)   0.2362 (  1.0%)   0.2363 (  1.0%)  CallGraph Construction
   0.1914 (  0.9%)   0.0376 (  3.0%)   0.2291 (  1.0%)   0.2291 (  1.0%)  Free MachineFunction
   0.1776 (  0.8%)   0.0126 (  1.0%)   0.1902 (  0.8%)   0.1901 (  0.8%)  Dominator Tree Construction
   0.1755 (  0.8%)   0.0124 (  1.0%)   0.1879 (  0.8%)   0.1881 (  0.8%)  Expand Atomic instructions
   0.1481 (  0.7%)   0.0122 (  1.0%)   0.1604 (  0.7%)   0.1606 (  0.7%)  Machine Natural Loop Construction
   0.0795 (  0.4%)   0.0119 (  1.0%)   0.0914 (  0.4%)   0.0916 (  0.4%)  Post-RA pseudo instruction expansion pass
   0.0734 (  0.3%)   0.0119 (  1.0%)   0.0853 (  0.4%)   0.0854 (  0.4%)  Expand ISel Pseudo-instructions
   0.0602 (  0.3%)   0.0119 (  0.9%)   0.0721 (  0.3%)   0.0718 (  0.3%)  X86 pseudo instruction expansion pass
   0.0558 (  0.3%)   0.0124 (  1.0%)   0.0682 (  0.3%)   0.0678 (  0.3%)  Expand reduction intrinsics
   0.0540 (  0.2%)   0.0131 (  1.0%)   0.0670 (  0.3%)   0.0673 (  0.3%)  Remove unreachable blocks from the CFG
   0.0509 (  0.2%)   0.0121 (  1.0%)   0.0630 (  0.3%)   0.0628 (  0.3%)  Exception handling preparation
   0.0377 (  0.2%)   0.0126 (  1.0%)   0.0503 (  0.2%)   0.0502 (  0.2%)  Basic Alias Analysis (stateless AA impl)
   0.0333 (  0.2%)   0.0129 (  1.0%)   0.0462 (  0.2%)   0.0465 (  0.2%)  Eliminate PHI nodes for register allocation
   0.0339 (  0.2%)   0.0122 (  1.0%)   0.0461 (  0.2%)   0.0462 (  0.2%)  Bundle Machine CFG Edges
   0.0166 (  0.1%)   0.0118 (  0.9%)   0.0284 (  0.1%)   0.0286 (  0.1%)  Insert fentry calls
   0.0162 (  0.1%)   0.0119 (  1.0%)   0.0281 (  0.1%)   0.0280 (  0.1%)  Machine Optimization Remark Emitter
   0.0147 (  0.1%)   0.0122 (  1.0%)   0.0269 (  0.1%)   0.0268 (  0.1%)  Insert XRay ops
   0.0144 (  0.1%)   0.0120 (  1.0%)   0.0263 (  0.1%)   0.0262 (  0.1%)  Machine Optimization Remark Emitter
   0.0135 (  0.1%)   0.0119 (  1.0%)   0.0254 (  0.1%)   0.0255 (  0.1%)  Implement the 'patchable-function' attribute
   0.0130 (  0.1%)   0.0117 (  0.9%)   0.0248 (  0.1%)   0.0250 (  0.1%)  Local Stack Slot Allocation
   0.0123 (  0.1%)   0.0118 (  0.9%)   0.0241 (  0.1%)   0.0244 (  0.1%)  X86 FP Stackifier
   0.0118 (  0.1%)   0.0117 (  0.9%)   0.0235 (  0.1%)   0.0237 (  0.1%)  Contiguously Lay Out Funclets
   0.0113 (  0.1%)   0.0121 (  1.0%)   0.0235 (  0.1%)   0.0234 (  0.1%)  X86 WinAlloca Expander
   0.0113 (  0.1%)   0.0117 (  0.9%)   0.0230 (  0.1%)   0.0232 (  0.1%)  Lazy Machine Block Frequency Analysis
   0.0114 (  0.1%)   0.0119 (  0.9%)   0.0233 (  0.1%)   0.0230 (  0.1%)  Live DEBUG_VALUE analysis
   0.0112 (  0.1%)   0.0120 (  1.0%)   0.0232 (  0.1%)   0.0230 (  0.1%)  X86 PIC Global Base Reg Initialization
   0.0105 (  0.0%)   0.0118 (  0.9%)   0.0224 (  0.1%)   0.0226 (  0.1%)  X86 vzeroupper inserter
   0.0106 (  0.0%)   0.0119 (  1.0%)   0.0225 (  0.1%)   0.0224 (  0.1%)  StackMap Liveness Analysis
   0.0104 (  0.0%)   0.0120 (  1.0%)   0.0223 (  0.1%)   0.0224 (  0.1%)  Analyze Machine Code For Garbage Collection
   0.0102 (  0.0%)   0.0119 (  0.9%)   0.0220 (  0.1%)   0.0223 (  0.1%)  Lazy Machine Block Frequency Analysis
   0.0102 (  0.0%)   0.0120 (  1.0%)   0.0222 (  0.1%)   0.0223 (  0.1%)  Inserts calls to mcount-like functions
   0.0088 (  0.0%)   0.0121 (  1.0%)   0.0209 (  0.1%)   0.0212 (  0.1%)  Lower Garbage Collection Instructions
   0.0093 (  0.0%)   0.0119 (  1.0%)   0.0212 (  0.1%)   0.0212 (  0.1%)  Safe Stack instrumentation pass
   0.0086 (  0.0%)   0.0121 (  1.0%)   0.0207 (  0.1%)   0.0208 (  0.1%)  Scalarize Masked Memory Intrinsics
   0.0082 (  0.0%)   0.0122 (  1.0%)   0.0204 (  0.1%)   0.0205 (  0.1%)  Shadow Stack GC Lowering
   0.0153 (  0.1%)   0.0000 (  0.0%)   0.0154 (  0.1%)   0.0154 (  0.1%)  Assumption Cache Tracker
   0.0113 (  0.1%)   0.0015 (  0.1%)   0.0128 (  0.1%)   0.0128 (  0.1%)  Assumption Cache Tracker
   0.0030 (  0.0%)   0.0000 (  0.0%)   0.0030 (  0.0%)   0.0030 (  0.0%)  Pre-ISel Intrinsic Lowering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Force set function attributes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Target Pass Configuration
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Target Transform Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Target Library Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Target Library Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Rewrite Symbols
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Machine Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Create Garbage Collector Module Metadata
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Profile summary info
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Machine Module Information
  21.6458 (100.0%)   1.2506 (100.0%)  22.8964 (100.0%)  22.9195 (100.0%)  Total

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: libthrift_example_3.a(file1_constants.cpp.o) has no symbols
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: libthrift_example_3.a(file1_data.cpp.o) has no symbols
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: libthrift_example_3.a(file1_constants.cpp.o) has no symbols
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: libthrift_example_3.a(file1_data.cpp.o) has no symbols
